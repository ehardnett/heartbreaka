const options = {};
require.config({
  paths: {
    braintree: 'https://js.braintreegateway.com/js/braintree-2.32.1.min'
  }
});

const braintree = require(['braintree'], function (braintree) {
  braintree.setup('sandbox_gpqy6ky8_vx32r6xn3xjsbdcj', 'custom', options);
});

console.log(braintree);

const gateway = new braintree.BraintreeGateway({
  environment: braintree.Environment.Sandbox,
  // Use your own credentials from the sandbox Control Panel here
  merchantId: 'vx32r6xn3xjsbdcj',
  publicKey: 'c8rzrhwp5tpwbkwv',
  privateKey: '9747dccf799eb608b200304322066cd8'
});

// Use the payment method nonce here
const nonceFromTheClient = body.paymentMethodNonce;
// Create a new transaction for $10
const newTransaction = gateway.transaction.sale({
  amount: '10.00',
  paymentMethodNonce: nonceFromTheClient,
  options: {
    // This option requests the funds from the transaction
    // once it has been authorized successfully
    submitForSettlement: true
  }
}, (error, result) => {
    if (result) {
      res.send(result);
    } else {
      res.status(500).send(error);
    }
});

var form = document.querySelector('#hosted-fields-form');
var submit = document.querySelector('input[type="submit"]');

  braintree.client.create({
    // Insert your tokenization key here
    authorization: 'sandbox_gpqy6ky8_vx32r6xn3xjsbdcj'
  }, function (clientErr, clientInstance) {
    if (clientErr) {
      console.error(clientErr);
      return;
    }

    // Create a hostedFields component to initialize the form

    braintree.hostedFields.create({
      client: clientInstance,
      // Customize the Hosted Fields.
      // More information can be found at:
      // https://developers.braintreepayments.com/guides/hosted-fields/styling/javascript/v3
      styles: {
        'input': {
          'font-size': '14px'
        },
        'input.invalid': {
          'color': 'red'
        },
        'input.valid': {
          'color': 'green'
        }
      },
      // Configure which fields in your card form will be generated by Hosted Fields instead
      fields: {
        number: {
          selector: '#card-number',
          placeholder: '4111 1111 1111 1111'
        },
        cvv: {
          selector: '#cvv',
          placeholder: '123'
        },
        expirationDate: {
          selector: '#expiration-date',
          placeholder: '10/2022'
        }
      }
    }, function (hostedFieldsErr, instance) {
      if (hostedFieldsErr) {
        console.error(hostedFieldsErr);
        return;
      }

      // Once the fields are initialized enable the submit button
      submit.removeAttribute('disabled');

      // Initialize the form submit event
      form.addEventListener('submit', function (event) {
        event.preventDefault();
        // When the user clicks on the 'Submit payment' button this code will send the
        // encrypted payment information in a variable called a payment method nonce
        instance.tokenize(function (tokenizeErr, payload) {
          if (tokenizeErr) {
            console.error(tokenizeErr);
            return;
          }
function openNav() {
  document.getElementById("myNav").style.width = "100%";
}

/* Close when someone clicks on the "x" symbol inside the overlay */
function closeNav() {
  document.getElementById("myNav").style.width = "0%";
}
